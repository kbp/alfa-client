<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:ALFA_Client"
        xmlns:my="clr-namespace:Loya.Dameer;assembly=Loya.Dameer" x:Class="ALFA_Client.User"
        Title="user" Height="546" Width="843" Loaded="WindowLoaded" KeyDown="WindowKeyDown" Margin="-7,0,0,0"    >
    <Window.Resources>
        <local:RoomCollection x:Key="RoomsDataSource"/>
        <Style x:Key="ListBoxItemStyle3" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="2,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" SnapsToDevicePixels="true" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" >
                            <StackPanel x:Name="stackPanel" Orientation="Horizontal" Background="#00000000">
                                <TextBlock Text="{Binding Room}"  FontSize="20" FontWeight="Bold" Margin="5,0" TextAlignment="Center"/>
                                <CheckBox IsChecked="{Binding GuardOn}" Width="32" Height="32">
                                    <CheckBox.Template>
                                        <ControlTemplate TargetType="{x:Type CheckBox}">
                                            <StackPanel>
                                                <Image x:Name="_image" Source="imguardoff.png"/>
                                            </StackPanel>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter TargetName="_image" Property="Source" Value="imguardon.png"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </CheckBox.Template>
                                </CheckBox>
                                <CheckBox IsChecked="{Binding LightOn}" Width="32" Height="32">
                                    <CheckBox.Template>
                                        <ControlTemplate TargetType="{x:Type CheckBox}">
                                            <StackPanel Orientation="Horizontal">
                                                <Image x:Name="_image" Source="imlightoff.png"/>
                                            </StackPanel>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter TargetName="_image" Property="Source" Value="imlighton.png"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </CheckBox.Template>
                                </CheckBox>

<!--                                <CheckBox Content="Свет" IsChecked="{Binding LightOn}"/>-->
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="Storyboard2">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="stackPanel">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FFFF0202"/>
                                    <EasingColorKeyFrame KeyTime="0:0:1" Value="#00141212"/>
                                    <EasingColorKeyFrame KeyTime="0:0:2" Value="Red"/>
                                    <EasingColorKeyFrame KeyTime="0:0:3" Value="#00FF0000"/>
                                    <EasingColorKeyFrame KeyTime="0:0:4" Value="Red"/>
                                    <EasingColorKeyFrame KeyTime="0:0:5" Value="#00FF0000"/>
                                    <EasingColorKeyFrame KeyTime="0:0:6" Value="Red"/>
                                    <EasingColorKeyFrame KeyTime="0:0:7" Value="#00FF0000"/>
                                    <EasingColorKeyFrame KeyTime="0:0:8" Value="Red"/>
                                    <EasingColorKeyFrame KeyTime="0:0:9" Value="#00FF0000"/>
                                    <EasingColorKeyFrame KeyTime="0:0:10" Value="Red"/>
                                    <EasingColorKeyFrame KeyTime="0:0:11" Value="#00FF0000"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>                        
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger> 
                            
                            <DataTrigger Binding="{Binding Alarm}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource Storyboard2}"/>
                                </DataTrigger.EnterActions>                                                     
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="EquityTemplate">
            <Grid>
                <Rectangle Margin="2" >
                    <Rectangle.Fill>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="#aaffffff" Offset="0"/>
                                    <GradientStop Color="transparent" Offset="1"/>
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Rectangle.Fill>
                </Rectangle>
                <Grid x:Name="StackPanel1" Height="29.1333333333334" Margin="5" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="660" />
                    </Grid.ColumnDefinitions>
                    <TextBlock FontFamily="Segoe UI"    x:Name="TextBlockNumber" Grid.Column="1"  Width="Auto"  Text="{Binding Number, Mode=OneWay}" Margin="-0.5,0,15.5,12.4666666666666" FontSize="14" FontWeight="Bold" VerticalAlignment="Stretch" Height="Auto"/>
                    <TextBlock FontFamily="Segoe UI" Margin="0,0,0,0" Width="Auto" Height="16.6666666666668" Grid.Column="1" Grid.ColumnSpan="1" x:Name="TextBlockTypeKey" Text="{Binding DisplayTypeKey, Mode=OneWay}"   FontSize="12" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" TextTrimming="WordEllipsis"/>
                    <TextBlock FontFamily="Segoe UI" x:Name="TextBlockName"  Grid.Column="2" Width="60"  Text="{Binding Name, Mode=OneWay}"  FontSize="12" VerticalAlignment="Stretch" Margin="8.005,0,11.995,14.466" Height="Auto" Grid.ColumnSpan="1"/>
                    <TextBlock FontFamily="Segoe UI"  FontSize="12"  FontWeight="Bold" VerticalAlignment="Stretch" Margin="0,14.401,0,0.065" Width="60" Height="Auto" Grid.Column="2" Grid.ColumnSpan="1" x:Name="TextBlockKey" Text="{Binding Key, Mode=OneWay}"  HorizontalAlignment="Center" Background="{x:Null}"/>
                    <TextBlock FontFamily="Segoe UI" x:Name="TextBlockFinishDate" Grid.Column="3"  Text="{Binding FinishDate, Mode=OneWay}" FontSize="12" TextAlignment="Left" FontStyle="Normal" FontWeight="Bold" VerticalAlignment="Bottom" Margin="18.4,0,0,-0.001" Height="15.667" HorizontalAlignment="Stretch"/>
                </Grid>
            </Grid>
        </DataTemplate>
        <Style x:Key="ListBoxItemStyleLog" TargetType="{x:Type ListBoxItem}">
        	<Setter Property="Background" Value="Transparent"/>
        	<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        	<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        	<Setter Property="Padding" Value="2,0,0,0"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type ListBoxItem}">
        				<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
        					<Grid x:Name="grid" Background="{x:Null}">
        					<Grid.ColumnDefinitions>
        						<ColumnDefinition Width="0.15*"/>
        						<ColumnDefinition Width="0.85*"/>
        					</Grid.ColumnDefinitions>
							<TextBlock Grid.Column="0" Text="{Binding Path=Time}" HorizontalAlignment="Left"></TextBlock>
							<TextBlock Grid.Column="1" Text="{Binding Path=Message}" HorizontalAlignment="Left"></TextBlock>		
						</Grid>
        				</Border>
        				<ControlTemplate.Triggers>
							<DataTrigger Binding="{Binding IsRead}" Value="False">      
								<Setter Property="Background" Value="#ff0000"/>                                            
        					</DataTrigger>
							<DataTrigger Binding="{Binding IsRead}" Value="True">      
								<Setter Property="Background" Value="Transparent"/>                                           
        					</DataTrigger>
        					<Trigger Property="IsSelected" Value="true">
        						<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
        						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
        					</Trigger>							
        					<MultiTrigger>
        						<MultiTrigger.Conditions>
        							<Condition Property="IsSelected" Value="true"/>
        							<Condition Property="Selector.IsSelectionActive" Value="false"/>
        						</MultiTrigger.Conditions>
        						<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        					</MultiTrigger>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
        					</Trigger>
						
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
    </Window.Resources>
    <Window.Background>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="Black" Offset="0"/>
            <GradientStop Color="White" Offset="1"/>
            <GradientStop Color="#FF7B7B7B" Offset="0.81"/>
            <GradientStop Color="#FF4B4B4B" Offset="0.341"/>
        </LinearGradientBrush>
    </Window.Background>
    <Grid  DataContext="{Binding Source={StaticResource RoomsDataSource}}">
        <ListBox ScrollViewer.HorizontalScrollBarVisibility="Hidden"  Margin="247,12,18,316" ItemsSource="{Binding Keys}" ItemTemplate="{StaticResource EquityTemplate}"  x:Name="listBox2" MouseDoubleClick="ListBox2MouseLeftButtonClick" IsSynchronizedWithCurrentItem="True"/>
        <Button Content="Считать ключ" Margin="0,0,477,258" x:Name="ButtonReadkey" Click="ButtonReadkeyClick" Height="29" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="103" />
        <Button Content="Назначить ключ" HorizontalAlignment="Right" Margin="0,0,442,92" x:Name="ButtonSetkey" Width="138" Click="ButtonSetkeyClick" Height="51" VerticalAlignment="Bottom" />
        <Button Content="Отменить ключ" Margin="0,0,264,92" x:Name="ButtonUnsetkey" Click="ButtonUnsetkeyClick" Height="51" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="151" />
        <TextBox Margin="0,0,264,258" x:Name="textBoxSetKey" Height="23" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="192" />
        <TextBox Margin="0,0,264,163" x:Name="textBoxFIO" HorizontalAlignment="Right" Width="192" Height="23" VerticalAlignment="Bottom" />
        <ComboBox Margin="0,0,264,211" x:Name="comboBoxTypeKey" HorizontalAlignment="Right" Width="192" Height="23" VerticalAlignment="Bottom">
            <ComboBoxItem Content="Гостевой"/>
            <ComboBoxItem Content="Горничный"/>
            <ComboBoxItem Content="Тех. служебный"/>
        </ComboBox>
        <Label Content="Ключ действителен до:" Height="28" HorizontalAlignment="Right" Margin="0,0,93.076,284" x:Name="label1" VerticalAlignment="Bottom" />
        <Label Content="Тип ключа:" Height="28" HorizontalAlignment="Right" Margin="0,0,518.996,211" x:Name="label4" VerticalAlignment="Bottom" />
        <Label Content="ФИО владельца:" Height="28" HorizontalAlignment="Right" Margin="0,0,490.056,160" x:Name="label5" VerticalAlignment="Bottom" />
        <my:Dameer  Margin="0,0,22,252" x:Name="dameer1" Format="Custom" ShowCheckBox="False" ShowDropDown="True" Height="34" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="198" />
        <Button Content="Проверка ключа" Margin="0,0,68,92" x:Name="buttonCheckKey" Click="ButtonCheckKeyClick" Height="51" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="168" />
        <ListBox ItemsSource="{Binding}" Margin="12,12,0,112.667" x:Name="listBox1" ItemContainerStyle="{DynamicResource ListBoxItemStyle3}"  HorizontalAlignment="Left" Width="149" IsSynchronizedWithCurrentItem="True"/>
        <!--DataContext="{Binding Source={StaticResource AlfaEventLogData}}" -->
        <ListBox Height="74" Margin="245,0,8,8" x:Name="listBoxLog" VerticalAlignment="Bottom" ItemsSource="{Binding}" SelectionChanged="ListBoxLogSelectionChanged" ItemContainerStyle="{DynamicResource ListBoxItemStyleLog}" />

        <Grid HorizontalAlignment="Left" Margin="12,0,0,12" x:Name="gridCounter" Width="211" Height="74" VerticalAlignment="Bottom">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.75*" />
                <ColumnDefinition Width="0.25*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>
            <TextBlock Grid.Column="0" Grid.Row="0">Всего комнат</TextBlock>
            <TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding RoomsCount}"/>
            <TextBlock Grid.Column="0" Grid.Row="1">Всего на связи</TextBlock>
            <TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding RoomsOnline}"/>
            <TextBlock Grid.Column="0" Grid.Row="2">Комнат на охране</TextBlock>
            <TextBlock Grid.Column="1" Grid.Row="2" Text="{Binding RoomsProtected}"/>
            <TextBlock Grid.Column="0" Grid.Row="3">Со включенным светом</TextBlock>
            <TextBlock Grid.Column="1" Grid.Row="3" Text="{Binding RoomsLightOn}"/>
        </Grid>
        <CheckBox IsHitTestVisible="False" Content="Соединение с сервером" Height="16" Margin="8,0,0,90" Name="checkBoxConnection" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="215" IsChecked="{Binding Path=ServerOnline}"/>
    </Grid>
</Window>
